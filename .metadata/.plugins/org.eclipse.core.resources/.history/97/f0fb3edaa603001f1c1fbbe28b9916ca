<%@page import="java.util.ArrayList"%>
<%@page import="shop.dto.Product"%>
<%@page import="java.util.List"%>
<%@page import="shop.dao.OrderRepository"%>
<%@page import="shop.dao.ProductIORepository"%>
<%@page import="shop.dto.Order"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>주문 완료</title>
<jsp:include page="/layout/meta.jsp" />
<jsp:include page="/layout/link.jsp" />
</head>
<body>   
<%
	//세션에서 장바구니 목록을 가져옵니다.
	List<Product> cartList = (List<Product>) session.getAttribute("cartList");
	
	// 카트가 null인지 확인
	if (cartList == null) {
		session.setAttribute("cartList", cartList);
		cartList = new ArrayList<>(); // 새로운 카트 생성
	}

	int sum = 0;

	// 세션에서 배송정보 목록을 가져옵니다.
	//회원/비회원 여부를 확인
	String userId = (String) session.getAttribute("loginId"); // 회원 아이디
	String order_pw = request.getParameter("orderPw"); // 비회원 비밀번호
	
	String phone = (String) request.getParameter("phoneNumber"); // 비회원 전화번호

	String name = request.getParameter("name");
	String shippingDate = request.getParameter("shippingDate");
	String country = request.getParameter("country");
	String zipCode = request.getParameter("zipCode");
	String addressName = request.getParameter("addressName");
	
	// order 객체 생성 및 데이터 설정
	Order order = new Order();
	
	order.setShipName(name);
	order.setDate(shippingDate);
	order.setCountry(country);
	order.setZipCode(zipCode);
	order.setAddress(addressName);
	order.setPhone(phone);
	
	order.setUserId(userId);
	
	if(userId == null) { 
		order.setOrderPw(order_pw);
		order.setPhone(phone);
	}
	
	// 주문을 디비에 저장
	OrderRepository orderDAO = new OrderRepository();
	int result = orderDAO.insert(order);
	
	// 성공적으로 주문이 처리 됐을 경우 추가 작업 수행
	if( result > 0) {
		ProductIORepository productIoDAO = new ProductIORepository();
		int lastOrderId = orderDAO.lastOrderNo();
		
		if (cartList != null && !cartList.isEmpty()) {
			
			// 장바구니에 있는 각 상품에 대해 주문 내역을 생성하고 데이터베이스에 저장합니다.
		    for (Product product : cartList) {
						sum += product.getQuantity() * product.getUnitPrice();
		        // 비회원인 경우 휴대폰 번호를 사용하고, 그렇지 않으면 사용자 ID를 사용합니다.
		        String user = (userId == null) ? phone : userId;
		        Product product = new Product(cart.getProductId(), lastOrderId, cart.getQuantity(), "OUT", user);
		        int add = productIODao.insert(product);
		        
		        // 오류 처리
		        if (add < 0) {
		            // 오류 발생 시 처리
		            break;
		        }
			}
	    }
		
		
	}
	
%>	

	<jsp:include page="/layout/header.jsp" />

	<div class="px-4 py-5 my-5 text-center">
		<h1 class="display-5 fw-bold text-body-emphasis">주문 완료</h1>
	</div>
	
	<!-- 주문 완료 확인 -->
	
	<div class="container order mb-5 p-5">
		
		<h2 class="text-center">주문이 완료되었습니다.</h2>
		<!-- 주문정보 -->
		<div class="ship-box">
			<table class="table ">
				<tbody><tr>
					<td>주문번호 :</td>
					<td><%= userId %></td>
				</tr>
				<tr>
					<td>배송지 :</td>
					<td><%=  %></td>
				</tr>
			</tbody></table>
			
			<div class="btn-box d-flex justify-content-center">
				<a href="/user/order.jsp" class="btn btn-primary btn-lg px-4 gap-3">주문내역</a>
			</div>
		</div>
	</div>
	
	
	<!-- 푸터 -->
	<jsp:include page="/layout/footer.jsp" />
	<script src="/static/js/validation.js"></script>


</body>
</html>